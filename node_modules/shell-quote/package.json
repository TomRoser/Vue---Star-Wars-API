{
  "_args": [
    [
      {
        "raw": "shell-quote@^1.6.1",
        "scope": null,
        "escapedName": "shell-quote",
        "name": "shell-quote",
        "rawSpec": "^1.6.1",
        "spec": ">=1.6.1 <2.0.0",
        "type": "range"
      },
      "C:\\Apps\\vuetest\\node_modules\\launch-editor"
    ]
  ],
  "_from": "shell-quote@^1.6.1",
  "_hasShrinkwrap": false,
  "_id": "shell-quote@1.7.1",
  "_location": "/shell-quote",
  "_nodeVersion": "12.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/shell-quote_1.7.1_1565703305203_0.4317010914374828"
  },
  "_npmUser": {
    "name": "goto-bus-stop",
    "email": "renee@kooi.me"
  },
  "_npmVersion": "6.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shell-quote@^1.6.1",
    "scope": null,
    "escapedName": "shell-quote",
    "name": "shell-quote",
    "rawSpec": "^1.6.1",
    "spec": ">=1.6.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/launch-editor"
  ],
  "_resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.7.1.tgz",
  "_shasum": "3161d969886fb14f9140c65245a5dd19b6f0b06b",
  "_shrinkwrap": null,
  "_spec": "shell-quote@^1.6.1",
  "_where": "C:\\Apps\\vuetest\\node_modules\\launch-editor",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/node-shell-quote/issues"
  },
  "dependencies": {},
  "description": "quote and parse shell commands",
  "devDependencies": {
    "tape": "4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2kUqeAGnMAu6YrTPX4E3LfxacH9gKljzVjlkUeSqY0soGwK4KLl7TURXCem712tkhBCeeaFP9QK4dKn88s3Icg==",
    "shasum": "3161d969886fb14f9140c65245a5dd19b6f0b06b",
    "tarball": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.7.1.tgz",
    "fileCount": 17,
    "unpackedSize": 20782,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdUryKCRA9TVsSAnZWagAAMxwP/iETNctxXkNLnj2hWnJF\nGhqLxFTXcha7gKDSMyuKGTY2Sf9du4ku2SB4Gm5Ubxw9ojb98Fgaab0PWW2t\nS21a05Zr8MWjar18LWcFSUKli/cCYzGNCwj0OJ259W1xDV3Ai2hJnuy+RFj7\nzSPFMeVtEZx1m+nKb8FR1T/VZ8pV/1eQeDMjCSvC2WU4Dv07R8xpi7RSvyVS\nVnoCZxaTcWBemcWqg3iZIWidfDzaxLtCO+6QpS5sErjTvido/EZqpjRPIy8y\nLRNL1536Q4IUdGNKCXggmyZ1JZHr1/R2c/oHOD3NzlT16dwwN5AzcUqoXhVk\nPKZuREChjP2v7OIqEY4wEMXrMPobg6pWU49x9Kzf+Tw7ggn0W7PB4zq+EzqU\ni6edBdZE/I0vpzFbjDhXcyqUM6ixUBcPXN5buS3yeTc6TeUOYdWlXhurNcwz\nLcte1HK4IdT1GpNEkU+8RIibfRdGLOUcZM/fCTJ6G3h7ZSE+RUUz0vyCZox+\nm7sDEfS5N5/xxsGpfF8eKUhbRQ5eFa1iOM6ZL1RU945yqlCsVCWDI7suKt+Z\nyAINWzAEwX1qSkl+ITObsz2a0P8Xu5DHwm114NYu4EjZFNaWNWLX0xz4CMw5\nhmifBXQ64zYcbdt13dfrx9F8FP5ZcJrWncHZ9sqrY0zL5KSY4mj/11jrSkSu\n0YWW\r\n=s6sP\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "c2950fba942da2d2e17a8fb5a4eaf8f8c72d1ab3",
  "homepage": "https://github.com/substack/node-shell-quote",
  "keywords": [
    "command",
    "parse",
    "quote",
    "shell"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "goto-bus-stop",
      "email": "renee@kooi.me"
    },
    {
      "name": "jiwaddell",
      "email": "jacob.im.waddell@gmail.com"
    },
    {
      "name": "karissa",
      "email": "krmckelv@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "shell-quote",
  "optionalDependencies": {},
  "readme": "# shell-quote\n\nParse and quote shell commands.\n\n# example\n\n## quote\n\n``` js\nvar quote = require('shell-quote').quote;\nvar s = quote([ 'a', 'b c d', '$f', '\"g\"' ]);\nconsole.log(s);\n```\n\noutput\n\n```\na 'b c d' \\$f '\"g\"'\n```\n\n## parse\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('a \"b c\" \\\\$def \\'it\\\\\\'s great\\'');\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'a', 'b c', '\\\\$def', 'it\\'s great' ]\n```\n\n## parse with an environment variable\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep --boop=\"$PWD\"', { PWD: '/home/robot' });\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'beep', '--boop=/home/robot' ]\n```\n\n## parse with custom escape charcter\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep --boop=\"$PWD\"', { PWD: '/home/robot' }, { escape: '^' });\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'beep', '--boop=/home/robot' ]\n```\n\n## parsing shell operators\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep || boop > /byte');\nconsole.dir(xs);\n```\n\noutput:\n\n```\n[ 'beep', { op: '||' }, 'boop', { op: '>' }, '/byte' ]\n```\n\n## parsing shell comment\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep > boop # > kaboom');\nconsole.dir(xs);\n```\n\noutput:\n\n```\n[ 'beep', { op: '>' }, 'boop', { comment: '> kaboom' } ]\n```\n\n# methods\n\n``` js\nvar quote = require('shell-quote').quote;\nvar parse = require('shell-quote').parse;\n```\n\n## quote(args)\n\nReturn a quoted string for the array `args` suitable for using in shell\ncommands.\n\n## parse(cmd, env={})\n\nReturn an array of arguments from the quoted string `cmd`.\n\nInterpolate embedded bash-style `$VARNAME` and `${VARNAME}` variables with\nthe `env` object which like bash will replace undefined variables with `\"\"`.\n\n`env` is usually an object but it can also be a function to perform lookups.\nWhen `env(key)` returns a string, its result will be output just like `env[key]`\nwould. When `env(key)` returns an object, it will be inserted into the result\narray like the operator objects.\n\nWhen a bash operator is encountered, the element in the array with be an object\nwith an `\"op\"` key set to the operator string. For example:\n\n```\n'beep || boop > /byte'\n```\n\nparses as:\n\n```\n[ 'beep', { op: '||' }, 'boop', { op: '>' }, '/byte' ]\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install shell-quote\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/substack/node-shell-quote.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "1.7.1"
}
